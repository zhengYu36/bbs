<?xml version="1.0" encoding="UTF-8"?>
<!-- 注意下面不要忘记导入mvc、context的schema -->  
<beans xmlns="http://www.springframework.org/schema/beans"  
xmlns:mvc="http://www.springframework.org/schema/mvc"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xmlns:context="http://www.springframework.org/schema/context"  
xsi:schemaLocation="   
http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
http://www.springframework.org/schema/mvc   
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
http://www.springframework.org/schema/context   
http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
  	<description>Spring-web MVC配置</description>
  	<!-- 开启自动扫描包 -->  
    <context:component-scan base-package="com.zy.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <!--
        spring的是父容器
        springmvc是子容器
        子容器排除掉Service注解,让父容器来加载
        但是我有一个疑问，为什么有的需要排除，有的又不需要排除呢？这个我感觉和版本有关系
        毕竟在springboot中，配置都不需要了，所以很多问题就是不同的版本引起的
        而且这个还没有办法去排除过多的问题额,所以很多时候哪怕多了一个接口的继承也会出现
        问题的，所以不同的版本有点时候需要特别注意,因为老的问题不一定会被修复掉
        -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!-- 开启注解驱动 -->  
    <mvc:annotation-driven/>

    <!-- 启动spring mvc注解 -->
    <mvc:default-servlet-handler/>

  	<!--   
         配置不用DispatcherServlet拦截的路径(例如：图片、CSS样式、js文件...):   
        路径可以自己设置，这里面我用static(WebRoot中的文件夹);   
        其中的"**"代表路径及其子路径       
     -->
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/fonts/" mapping="/fonts/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/static/" mapping="/static/**"/>


    <!-- 配置视图解析器 -->  
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
        <!--    
            上面的配置是固定的，下面两个配置意思是：如果你要访问index视图，   
            它会自动 prefix(前缀) + index + suffix(后缀),   
            生成/WEB-INF/views/index.jsp    
        -->  
        <property name="prefix" value="/WEB-INF/views/"/>  
        <property name="suffix" value=".jsp"/>  
    </bean> 
    
    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  
</beans>